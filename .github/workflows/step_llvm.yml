name: Build LLVM single step

on:
  workflow_call:
    inputs:
      finished:
        required: true
        type: boolean
      first:
        required: false
        default: false
        type: boolean
      num:
        required: false
        default: -1
        type: number
      mimalloc-artifact-name:
        required: true
        type: string
    outputs:
      finished:
        value: ${{ inputs.finished || jobs.build-llvm.outputs.finished }}

jobs:
  build-llvm:
    name: step ${{ inputs.num }}
    if: '!inputs.finished'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    env:
      PGO_PROFILE_NAME: unset fixme
      SEVENZ_PATH: unset fixme
      STORE_PATH: unset fixme
      CACHE_PREFIX: ${{ matrix.os }}
      PROJECT_LOCATION: C:\ungoogled-chromium-windows
      TIMEOUT_KEY: step-llvm
    steps:
      - name: Download static mimalloc
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.mimalloc-artifact-name }}
          path: C:/mimalloc.lib

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Copy ungoogled-chromium stuff to C drive
        run: Copy-Item -Path . -Destination $env:PROJECT_LOCATION -Recurse

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ env.CACHE_PREFIX }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ env.CACHE_PREFIX }}-pnpm-store-

      - name: Setup third-party tool cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\download_cache
            ${{ env.PROJECT_LOCATION }}\build\src\third_party
            !${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build
          key: ${{ env.CACHE_PREFIX }}-downloads-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}
          restore-keys: |
            ${{ env.CACHE_PREFIX }}-downloads-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}
            ${{ env.CACHE_PREFIX }}-downloads-partial-including-extracted-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}
            ${{ env.CACHE_PREFIX }}-downloads-partial-download-only-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      - name: Setup PGO profile cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\**.profdata
          key: ${{ env.CACHE_PREFIX }}-pgo-

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 512M
          key: sccache-llvm-${{ env.CACHE_PREFIX }}
          variant: sccache

      - name: Install node.js dependencies
        id: pnpm-install
        run: pnpm install
        working-directory: ./.github/actions

      - id: install-7z-zstd
        name: Install 7zip-zstd codecs
        uses: ./.github/actions/7zip-zstd

      - name: Setup environment
        id: setup-environment
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.install-7z-zstd.outputs.sevenz-actual-path}}\7z.exe" --step setup-environment
          key: ${{ env.TIMEOUT_KEY }}

      - name: Download PGO profiles
        id: download-pgo
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.install-7z-zstd.outputs.sevenz-actual-path}}\7z.exe" --step download-pgo-profiles
          key: ${{ env.TIMEOUT_KEY }}

      - name: Create ARGS.gn
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.install-7z-zstd.outputs.sevenz-actual-path}}\7z.exe" --step create-args-gn
          key: ${{ env.TIMEOUT_KEY }}

      - name: Bootstrap GN
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.install-7z-zstd.outputs.sevenz-actual-path}}\7z.exe" --step bootstrap-gn
          key: ${{ env.TIMEOUT_KEY }}

      - name: Build Chromium LLVM
        id: build-llvm
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: ${{ env.PROJECT_LOCATION }}\build
          tarball-pattern: ${{ env.PROJECT_LOCATION }}\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build_llvm.py
          ignore-exit-codes: 124
          key: ${{ env.TIMEOUT_KEY }}

      - name: Upload compiled results
        if: steps.build-llvm.outputs.finished
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: chromium-llvm
          path: ${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build
          retention-days: 5

      - name: Cache compiled LLVM
        if: steps.build-llvm.outputs.finished
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build
          key: local-llvm-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      - name: Upload .patch rejects on build failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: patch-rejects
          path: |
            ${{ env.PROJECT_LOCATION }}\**\*.rej
            **\*.rej
          retention-days: 90

      # Don't save LLVM data if LLVM build may have failed
      - name: Fallback save downloads cache on build failure (1)
        if: failure() && steps.setup-environment.outputs.outcome == 'success' && ((steps.build-llvm.outputs.outcome == 'success') || steps.build-llvm.outcome == 'skipped')
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\download_cache
            ${{ env.PROJECT_LOCATION }}\build\src\third_party
          key: ${{ env.CACHE_PREFIX }}-downloads-partial-including-extracted-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      - name: Fallback save downloads cache on build failure (2)
        if: failure() && steps.setup-environment.outputs.outcome == 'success' && ((steps.build-llvm.outputs.outcome == 'failed') || steps.build-llvm.outcome == 'cancelled')
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\download_cache
          key: ${{ env.CACHE_PREFIX }}-downloads-partial-download-only-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      - name: Fallback save PGO cache on build failure
        if: failure() && env.CACHE_PREFIX != 'unset fixme'
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\**.profdata
          key: ${{ env.CACHE_PREFIX }}-pgo-${{ env.CACHE_PREFIX }}

      - name: Fallback save pnpm cache on build failure
        if: failure() && steps.pnpm-install.outcome == 'success'
        uses: actions/cache/save@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ env.CACHE_PREFIX }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
    outputs:
      finished: ${{ steps.build-llvm.outputs.outcome == 'success' }}
