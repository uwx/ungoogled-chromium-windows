name: Build ungoogled-chromium single step

on:
  workflow_call:
    inputs:
      finished:
        required: true
        type: boolean
      first:
        required: false
        default: false
        type: boolean
      x86:
        required: false
        default: false
        type: boolean
      num:
        required: false
        default: -1
        type: number
      local-llvm:
        required: false
        default: false
        type: boolean
    outputs:
      finished:
        value: ${{ inputs.finished || jobs.pt1.outputs.finished }}

jobs:
  pt1:
    name: step ${{ inputs.num }}
    if: '!inputs.finished'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    env:
      SEVENZ_PATH: unset fixme
      CACHE_PREFIX: ${{ matrix.os }}
      PROJECT_LOCATION: C:\U
      ARCH_STRING: ${{ inputs.x86 && 'x86' || 'x64' }}
      TIMEOUT_KEY: step
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - id: common-setup
        uses: ./.github/actions/common-setup
        with:
          sccache-key: chromium
          os: ${{ matrix.os }}
          arch: ${{ env.ARCH_STRING }}
          project-location: ${{ env.PROJECT_LOCATION }}

      - if: 'inputs.local-llvm'
        name: Download previously compiled LLVM
        uses: actions/download-artifact@v3
        with:
          name: chromium-llvm
          path: ${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build

      #- if: '!inputs.local-llvm'
      #  run: |
      #    $CHROMIUM_VERSION = $((Get-Content ./ungoogled-chromium/chromium_version.txt | Out-String).Trim())
      #    #curl -s https://raw.githubusercontent.com/chromium/chromium/$CHROMIUM_VERSION/tools/clang/scripts/update.py | python3 - --output-dir=${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build\Release+Asserts
      #    $CLANG_FORMAT_HASH = ((Invoke-WebRequest https://github.com/chromium/chromium/raw/$CHROMIUM_VERSION/buildtools/win/clang-format.exe.sha1).Content.Split([Environment]::NewLine) | Out-String).Trim()
      #    Invoke-WebRequest -Uri https://commondatastorage.googleapis.com/chromium-clang-format/$CLANG_FORMAT_HASH -OutFile ${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build\Release+Asserts\bin\clang-format.exe

      - name: Setup environment
        id: setup-environment
        uses: uwx/actions/multistep@main
        with:
          tarball-artifact-name: build-artifact-${{ env.ARCH_STRING }}
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step setup-environment
          key: ${{ env.TIMEOUT_KEY }}
          # timeout: 50000 # TEST REMOVE LATER

      - name: Download PGO profiles
        if: steps.setup-environment.outputs.outcome == 'success'
        id: download-pgo
        uses: uwx/actions/multistep@main
        with:
          tarball-artifact-name: build-artifact-${{ env.ARCH_STRING }}
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step download-pgo-profiles
          key: ${{ env.TIMEOUT_KEY }}
          # timeout: 50000 # TEST REMOVE LATER

      - name: Create ARGS.gn
        if: steps.download-pgo.outputs.outcome == 'success'
        id: create-args
        uses: uwx/actions/multistep@main
        with:
          tarball-artifact-name: build-artifact-${{ env.ARCH_STRING }}
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step create-args-gn
          key: ${{ env.TIMEOUT_KEY }}
          # timeout: 50000 # TEST REMOVE LATER

      - name: Bootstrap GN
        if: steps.create-args.outputs.outcome == 'success'
        id: bootstrap-gn
        uses: uwx/actions/multistep@main
        with:
          tarball-artifact-name: build-artifact-${{ env.ARCH_STRING }}
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step bootstrap-gn
          key: ${{ env.TIMEOUT_KEY }}
          # timeout: 50000 # TEST REMOVE LATER

      - name: Build
        if: steps.bootstrap-gn.outputs.outcome == 'success'
        id: stage
        uses: uwx/actions/multistep@main
        with:
          tarball-artifact-name: build-artifact-${{ env.ARCH_STRING }}
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step build
          ignore-exit-codes: 124
          key: ${{ env.TIMEOUT_KEY }}
          # timeout: 50000 # TEST REMOVE LATER

      - name: Package build result
        if: steps.stage.outputs.outcome == 'success'
        run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step package
        working-directory: ${{ env.PROJECT_LOCATION }}

      - name: Upload build result
        if: steps.stage.outputs.outcome == 'success'
        uses: ./.github/actions/upload-chromium-package
        with:
          x86: ${{ inputs.x86 }}
          project-location: ${{ env.PROJECT_LOCATION }}

    outputs:
      finished: ${{ steps.stage.outputs.outcome == 'success' }}