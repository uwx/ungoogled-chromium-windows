name: CI
on:
  push:
    branches:
      - master
    tags:
      - '*'
      - '!llvm-*'
  workflow_dispatch:
  repository_dispatch:
    types: [updated-from-upstream]

concurrency:
  group: ${{ github.workflow }}-llvm-enabled-build
  cancel-in-progress: true

permissions:
  contents: write # to be able to create releases

jobs:
  #build-llvm:
  #  uses: ./.github/workflows/build_llvm.yml

  build-chromium:
    strategy:
      matrix:
        x86: [true, false]
    #needs: build-llvm
    name: ${{ matrix.x86 && 'x86 build' || 'x64 build' }}
    uses: ./.github/workflows/build.yml
    with:
      x86: ${{ matrix.x86 }}
      has-stage-artifact: false #${{ needs.build-llvm.outputs.has_stage_artifact }}
      local-llvm: true

  publish-release:
    needs: build-chromium
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: fixme pls
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: uwx/actions/setup-pstoolkit@main

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: chromium
      - name: Download x86 package
        uses: actions/download-artifact@v3
        with:
          name: chromium-x86

      - name: Tag published version
        shell: pwsh
        run: |
          $CHROMIUM_VERSION = $((Get-Content ./ungoogled-chromium/chromium_version.txt | Out-String).Trim())

          Set-GitHubActionsEnv RELEASE_TAG "$CHROMIUM_VERSION-$env:GITHUB_SHA"

          git tag -a "$env:RELEASE_TAG" -m "Published version $env:RELEASE_TAG" $env:GITHUB_SHA
          git push origin $env:RELEASE_TAG

      - name: Publish release
        id: publish
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ env.RELEASE_TAG }}
          fail_on_unmatched_files: true
          files: |
            ungoogled-chromium*
    outputs:
      assets: ${{ steps.publish.outputs.assets }}

  #publish-winget:
  #  needs: publish-release
  #  runs-on: windows-2019
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    - name: Setup Stage
  #      run: npm install
  #      working-directory: ./.github/actions/winget
  #    - name: Run Stage
  #      id: stage
  #      uses: ./.github/actions/winget
  #      with:
  #        token: ${{ secrets.PAT }}
  #        version: ${{ github.ref_name }}
  #        assets: ${{ needs.publish-release.outputs.assets }}
