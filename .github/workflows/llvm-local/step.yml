name: Build LLVM single step

on:
  workflow_call:
    inputs:
      finished:
        required: true
        type: boolean
      first:
        required: false
        default: false
        type: boolean
      num:
        required: false
        default: -1
        type: number
      mimalloc-artifact-name:
        required: true
        type: string
    outputs:
      finished:
        value: ${{ inputs.finished || jobs.build-llvm.outputs.finished }}

jobs:
  build-llvm:
    name: step ${{ inputs.num }}
    if: '!inputs.finished'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    env:
      PGO_PROFILE_NAME: unset fixme
      SEVENZ_PATH: unset fixme
      STORE_PATH: unset fixme
      CACHE_PREFIX: ${{ matrix.os }}
      PROJECT_LOCATION: C:\ungoogled-chromium-windows
      TIMEOUT_KEY: step-llvm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download static mimalloc
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.mimalloc-artifact-name }}
          path: C:/mimalloc.lib

      - id: common-setup
        uses: ./.github/actions/common-setup
        with:
          sccache-limit: 512M
          sccache-key: llvm
          os: ${{ matrix.os }}
          arch: x64
          project-location: ${{ env.PROJECT_LOCATION }}

      - name: Setup environment
        id: setup-environment
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step setup-environment --skip-domsub  --force
          key: ${{ env.TIMEOUT_KEY }}

      - name: Download PGO profiles
        id: download-pgo
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step download-pgo-profiles --skip-domsub
          key: ${{ env.TIMEOUT_KEY }}

      - name: Create ARGS.gn
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step create-args-gn --skip-domsub
          key: ${{ env.TIMEOUT_KEY }}

      - name: Bootstrap GN
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: .\build
          tarball-pattern: .\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build.py --ci --7z-path "${{steps.common-setup.outputs.sevenz-actual-path}}\7z.exe" --step bootstrap-gn --skip-domsub
          key: ${{ env.TIMEOUT_KEY }}

      - name: Build Chromium LLVM
        id: build-llvm
        uses: ./.github/actions/stage
        with:
          tarball-artifact-name: build-artifact-x64
          tarball-root: ${{ env.PROJECT_LOCATION }}\build
          tarball-pattern: ${{ env.PROJECT_LOCATION }}\build\src
          cwd: ${{ env.PROJECT_LOCATION }}
          run: python -u build_llvm.py
          ignore-exit-codes: 124
          key: ${{ env.TIMEOUT_KEY }}

      - name: Upload compiled results
        if: steps.build-llvm.outputs.finished
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: chromium-llvm
          path: ${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build
          retention-days: 5

      - name: Cache compiled LLVM
        if: steps.build-llvm.outputs.finished
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\src\third_party\llvm-build
          key: local-llvm-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      #- name: Upload .patch rejects on build failure
      #  if: failure()
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: patch-rejects
      #    path: |
      #      ${{ env.PROJECT_LOCATION }}\**\*.rej
      #      **\*.rej
      #    retention-days: 90

      # Don't save LLVM data if LLVM build may have failed
      - name: Fallback save downloads cache on build failure (1)
        if: failure() && steps.setup-environment.outputs.outcome == 'success' && ((steps.build-llvm.outputs.outcome == 'success') || steps.build-llvm.outcome == 'skipped')
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\download_cache
            ${{ env.PROJECT_LOCATION }}\build\src\third_party
          key: ${{ env.CACHE_PREFIX }}-downloads-partial-including-extracted-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      - name: Fallback save downloads cache on build failure (2)
        if: failure() && steps.setup-environment.outputs.outcome == 'success' && ((steps.build-llvm.outputs.outcome == 'failed') || steps.build-llvm.outcome == 'cancelled')
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.PROJECT_LOCATION }}\build\download_cache
          key: ${{ env.CACHE_PREFIX }}-downloads-partial-download-only-${{ hashFiles('**/downloads.ini', '**/chromium_version.txt') }}

      - uses: ./.github/actions/common-teardown
        with:
          os: ${{ matrix.os }}
    outputs:
      finished: ${{ steps.build-llvm.outputs.outcome == 'success' }}
