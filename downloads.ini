# Extra dependencies not included in the main Chromium source archive, and
# additional build utilities to replace Google-provided ones.
# Do note that utilities in here can be swapped with user-provided versions.

# Uses a heavily modified syzygy code base to build swapimport.exe
# Disabled import reordering for now since this is too much work to maintain
#[third_party/syzygy]
#version = bd0e67f571063e18e7200c72e6152a3a7e4c2a6d
#url = https://github.com/Eloston/syzygy/archive/{version}.tar.gz
#download_filename = syzygy-{version}.tar.gz
#strip_leading_dirs = syzygy-{version}

# Use a pre-built LLVM toolchain from LLVM for convenience
# Developer notes:
# * Releases of LLVM are available as "Clang for Windows (64-bit)" on LLVM's download page.
# * If the current stable version of LLVM is causing problems with the build, try
#   matching Google's LLVM version (defined by the `CLANG_REVISION` variable in
#   tools/clang/scripts/update.py by downloading a snapshot build at the version specified
#   by `CLANG_REVISION` and `VERSION` constants in `tools/clang/scripts/update.py`.
#   For example, revision 123456 of LLVM 9.8.7 64-bit Windows would be:
#   `http://prereleases.llvm.org/win-snapshots/LLVM-9.8.7-r123456-win64.exe`
#   (link derived from [LLVM Snapshot Builds](http://llvm.org/builds/))
[llvm]
version = 18.1.0
#Uncomment when pre-release version is used.
#url = https://prereleases.llvm.org/win-snapshots/LLVM-%(version)s-win64.exe
#Uncomment the below instead when a new enough stable version of LLVM comes around
url = https://github.com/llvm/llvm-project/releases/download/llvmorg-%(version)s/LLVM-%(version)s-win64.exe
download_filename = LLVM-%(version)s-win64.exe
extractor = 7z
output_path = third_party/llvm-build/Release+Asserts

#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/clang-%(version)s.tgz
#download_filename = llvm-clang-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
##version = 16.0.2
###Uncomment when pre-release version is used.
###url = https://prereleases.llvm.org/win-snapshots/LLVM-%(version)s-win64.exe
###Uncomment the below instead when a new enough stable version of LLVM comes around
##url = https://github.com/llvm/llvm-project/releases/download/llvmorg-%(version)s/LLVM-%(version)s-win64.exe
##download_filename = LLVM-%(version)s-win64.exe
##extractor = 7z
##output_path = third_party/llvm-build/Release+Asserts
#
#[coverage_tools]
#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/llvm-code-coverage-%(version)s.tgz
#download_filename = llvm-code-coverage-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
#
#[objdump]
#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/llvmobjdump-%(version)s.tgz
#download_filename = llvmobjdump-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
#
#[clang-tidy]
#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/clang-tidy-%(version)s.tgz
#download_filename = clang-tidy-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
#
#[clangd]
#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/clangd-%(version)s.tgz
#download_filename = clangd-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
#
#[libclang]
#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/libclang-%(version)s.tgz
#download_filename = libclang-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
#
#[translation_unit]
#version = llvmorg-18-init-1174-g2532b68f-1
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/translation_unit-%(version)s.tgz
#download_filename = translation_unit-%(version)s-win64.tgz
#output_path = third_party/llvm-build/Release+Asserts
#
#[rust_toolchain]
#version = 34ccd0485966c3933288cd30a076bef63e3298c5-1-llvmorg-18-init-1174-g2532b68f
#url = https://commondatastorage.googleapis.com/chromium-browser-clang/Win/rust-toolchain-%(version)s.tgz
#download_filename = rust-toolchain-%(version)s-win64.tgz
#output_path = third_party/rust-toolchain

# Pre-built GNU gperf from msys2
[gperf-gcc]
version = 13.2.0-2
url = https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-gcc-libs-%(version)s-any.pkg.tar.zst
download_filename = mingw-gcc-libs-%(version)s-any.pkg.tar.zst
sha256 = accbb4c4f180eca73de3876ba4c39152c8d0d2addc503ff519a451c081f7ad2f
output_path = third_party/gperf
strip_leading_dirs = mingw64

[gperf]
version = 3.1-1
url = https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-gperf-%(version)s-any.pkg.tar.xz
download_filename = gperf-%(version)s.tar.xz
sha256 = 33499f19eb175232448a5296c1046179c4157cf82c541d507a731aaf01208f38
output_path = third_party/gperf
strip_leading_dirs = mingw64

# Pre-built GNU bison from msys2
[bison]
version = 3.8.2-5
url = https://mirror.msys2.org/msys/x86_64/bison-%(version)s-x86_64.pkg.tar.zst
download_filename = bison-%(version)s-x86_64.pkg.tar.zst
sha256 = 7439ca784a9909e0730a513d3aff15852c3b292ac85053fa2dd7a2a19c1ce04c
output_path = third_party/bison
strip_leading_dirs = usr

[libiconv]
version = 1.17-1
url = https://mirror.msys2.org/msys/x86_64/libiconv-%(version)s-x86_64.pkg.tar.zst
download_filename = libiconv-%(version)s-x86_64.pkg.tar.zst
sha256 = e7f76e543fc27b44b243d9c3a69af036f40c6da64f16488813301a32646127c2
output_path = third_party/bison
strip_leading_dirs = usr

[gcc]
version = 13.2.0-2
url = https://mirror.msys2.org/msys/x86_64/gcc-libs-%(version)s-x86_64.pkg.tar.zst
download_filename = gcc-libs-%(version)s-x86_64.pkg.tar.zst
sha256 = cc95546dd139bfb2ec3dc9c7e536024e8a6486de7fe578ee7855dc0718a21bfc
output_path = third_party/bison
strip_leading_dirs = usr

[libintl]
version = 0.22-2
url = https://mirror.msys2.org/msys/x86_64/libintl-%(version)s-x86_64.pkg.tar.zst
download_filename = libintl-%(version)s-x86_64.pkg.tar.zst
sha256 = c86e844e1c1a5ff986b3a007cce797285212852f05cc127579880e62f9de9000
output_path = third_party/bison
strip_leading_dirs = usr

[m4]
version = 1.4.19-2
url = https://mirror.msys2.org/msys/x86_64/m4-%(version)s-x86_64.pkg.tar.zst
download_filename = m4-%(version)s-x86_64.pkg.tar.zst
sha256 = 4a1d296571afa7b8837fd5e227e16c9cb7e26c0f31f03b364e11c1ae8ee2a913
output_path = third_party/bison
strip_leading_dirs = usr

[bash]
version = 5.2.015-2
url = https://mirror.msys2.org/msys/x86_64/bash-%(version)s-x86_64.pkg.tar.zst
download_filename = bash-%(version)s-x86_64.pkg.tar.zst
sha256 = 44268253ea4631d33f0d2f234ad67ba4cc7d45aea3c441558825a628fccfd576
output_path = third_party/bison
strip_leading_dirs = usr

# Pre-built Ninja (build system)
[ninja]
version = 1.11.1
url = https://github.com/ninja-build/ninja/releases/download/v%(version)s/ninja-win.zip
download_filename = ninja-win-%(version)s.zip
# sha512 = 6004140d92e86afbb17b49c49037ccd0786ce238f340f7d0e62b4b0c29ed0d6ad0bab11feda2094ae849c387d70d63504393714ed0a1f4d3a1f155af7a4f1ba3
extractor = 7z
output_path = third_party/ninja

# Pre-built git
[git]
version = 2.42.0
url = https://github.com/git-for-windows/git/releases/download/v%(version)s.windows.2/PortableGit-%(version)s.2-64-bit.7z.exe
download_filename = PortableGit-%(version)s-64-bit.7z.exe
# sha256 = 12c10fad2c2db17d9867dbbacff1adc8be50868b793a73d451c2b878914bb32d
extractor = 7z
output_path = third_party/git

# Pre-built Node.JS (LTS)
[nodejs]
version = 18.18.0
url = https://nodejs.org/dist/v%(version)s/node-v%(version)s-win-x64.zip
download_filename = node-v%(version)s-win-x64.zip
# sha256 = c1a3be05342166cb9304d01da7ff8b23df6d4b16f9c98ae33b9b4fff79d8d0e2
extractor = 7z
output_path = third_party/node/win
strip_leading_dirs=node-v%(version)s-win-x64

# esbuild
[esbuild]
version = 0.15.18
url = https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-%(version)s.tgz
download_filename = esbuild-windows-64-%(version)s.tgz
output_path = third_party/devtools-frontend/src/third_party/esbuild
strip_leading_dirs=package